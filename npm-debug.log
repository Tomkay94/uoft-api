0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish', '.' ]
2 info using npm@1.4.28
3 info using node@v0.10.33
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/karysto/.npm/3a52ce78-.lock
11 verbose tar pack [ '/home/karysto/.npm/uoft-api/0.1.7/package.tgz', '.' ]
12 verbose tarball /home/karysto/.npm/uoft-api/0.1.7/package.tgz
13 verbose folder .
14 info prepublish uoft-api@0.1.7
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /home/karysto/.npm/1f1177db-tar.lock
17 silly lockFile 35210696-o-npm-uoft-api-0-1-7-package-tgz tar:///home/karysto/.npm/uoft-api/0.1.7/package.tgz
18 verbose lock tar:///home/karysto/.npm/uoft-api/0.1.7/package.tgz /home/karysto/.npm/35210696-o-npm-uoft-api-0-1-7-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 35210696-o-npm-uoft-api-0-1-7-package-tgz tar:///home/karysto/.npm/uoft-api/0.1.7/package.tgz
22 silly lockFile 35210696-o-npm-uoft-api-0-1-7-package-tgz tar:///home/karysto/.npm/uoft-api/0.1.7/package.tgz
23 silly lockFile bcafe7da-rysto-npm-uoft-api-0-1-7-package /home/karysto/.npm/uoft-api/0.1.7/package
24 verbose lock /home/karysto/.npm/uoft-api/0.1.7/package /home/karysto/.npm/bcafe7da-rysto-npm-uoft-api-0-1-7-package.lock
25 silly lockFile bcafe7da-rysto-npm-uoft-api-0-1-7-package /home/karysto/.npm/uoft-api/0.1.7/package
26 silly lockFile bcafe7da-rysto-npm-uoft-api-0-1-7-package /home/karysto/.npm/uoft-api/0.1.7/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'uoft-api',
29 silly publish   description: 'A simple module for gathering data from the University of Toronto course listings.',
29 silly publish   author:
29 silly publish    { name: 'Thanasi Karachotzitis',
29 silly publish      email: 'thanasi.karachotzitis@mail.utoronto.ca',
29 silly publish      url: 'http://thanasi.me' },
29 silly publish   version: '0.1.7',
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'https://karysto@bitbucket.org/karysto/uoft-api.git' },
29 silly publish   dependencies: { cheerio: '*', request: '*' },
29 silly publish   license: 'MIT',
29 silly publish   main: 'index.js',
29 silly publish   readme: 'A Node.js module for retrieving data from the University of Toronto\'s course listings.\n\n##### Disclaimer\nPlease be aware that this module relies on web scrapers to retrieve the data from the University of Toronto course listings. I cannot control how you incorporate this module into your project, and so by using this module you agree that the developer(s) of this module are in no way responsible for any consequences that may (or may not) result because of your use of this module.\n\n#### Getting Started\n##### Install:\n```sh\n$ npm i uoft-api\n```\n##### Reference:\n```js\nvar uoftAPI = require(\'uoft-api\');\n```\n\n### Supported Functions\n- `getCourseDepartment`\n- `getProgramCourses`\n\n##### `getCourseDepartment`\n- Takes a valid three-letter code representing a department at the University (ie/ the first three letters of any  course code).\n- Returns an array of JSON objects, where each object contains a department field which has the name of the department specified by the code.\n\n##### Number of Requests:\n- `getCourseDepartment` performs **1** request to retrieve the department name of the specified program.\n\n##### Usage:\n```js\nuoftAPI.getCourseDepartment(programCode, function(err, department) {\n  // do whatever with the course department array\n});\n```\n##### Examples\n```js\nuoftAPI.getCourseDepartment(\'csc\', function(err, department) {\n  console.log(department);\n  /* [ { department: \'Computer Science\' } ] */\n});\n```\n\n```js\nuoftAPI.getCourseDepartment(\'env\', function(err, department) {\n  console.log(department);\n  /* [ { department: \'Environment, School of\' } ] */\n});\n```\n\n##### `getProgramCourses`\n- Takes a valid three-letter code representing a department at the University (ie/ the first three letters of any  course code).\n- Returns an array of JSON objects in a callback (as demonstrated below), where each JSON object contains a single course\'s information and has the following structure:\n\n```js\n  {\n    courseName: \'Computational Thinking\', // Title of the course\n    courseCode: \'CSC104H1\',               // Course code\n    courseTerm: \'F\',                      // Course semester\n    courseWait: \'Y\',                      // If the course contains a wait-list (Y/N)\n    courseProf: [ \'D. Heap\' ]             // Professor(s) teaching the course\n  }\n```\n\n##### Number of Requests:\n- `getProgramCourses` performs **2** requests to retrieve all course data of the specified program.\n\n##### Usage:\n```js\nuoftAPI.getProgramCourses(programCode, function(err, courseData) {\n  // do whatever with the returned courseData json\n});\n```\n##### Examples\n```js\nuoftAPI.getProgramCourses(\'csc\', function(err, courseData) {\n  console.log(courseData);\n  /*\n  [\n    {\n      courseName: \'Computational Thinking\',\n      courseCode: \'CSC104H1\',\n      courseTerm: \'F\',\n      courseWait: \'Y\',\n      courseProf: [ \'D. Heap\' ]\n    },\n    {\n      courseName: \'Computational Thinking\',\n      courseCode: \'CSC104H1\',\n      courseTerm: \'S\',\n      courseWait: \'Y\',\n      courseProf: [ \'G. Baumgartner\' ]\n    },\n      < ... etc, ordered by course code ... >\n    {\n      courseName: \'Computabil & Logic\',\n      courseCode: \'CSC438H1\',\n      courseTerm: \'F\',\n      courseWait: \'Y\',\n      courseProf: [ \'T. Pitassi\' ]\n    }\n  ]\n*/\n});\n```\n\n### Function Addition Roadmap\n- Extending `getProgramCourses` to include the lecture and tutorial sections of each respective class in their own arrays.\n- Extending `getProgramCourses` to include when each tutorial and lecture section takes place (day of the week and time).\n- Extending the module to support course data from the University of Toronto Mississauga and Scarborough campus time-tables.\n- Extending the module to support course data from the St. George campus Faculty of Engineering.\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '91b67ed4909c4dee44eaa79109abcf9df9f3690f',
29 silly publish   _id: 'uoft-api@0.1.7',
29 silly publish   scripts: {},
29 silly publish   _shasum: '834a30a9cca02fe90db6a5a61e2a0b07f72538d0',
29 silly publish   _from: '.' }
30 verbose request where is /uoft-api
31 verbose request registry https://registry.npmjs.org/
32 verbose request id 61109b091c3f8d49
33 verbose url raw /uoft-api
34 verbose url resolving [ 'https://registry.npmjs.org/', './uoft-api' ]
35 verbose url resolved https://registry.npmjs.org/uoft-api
36 verbose request where is https://registry.npmjs.org/uoft-api
37 info trying registry request attempt 1 at 05:38:19
38 http PUT https://registry.npmjs.org/uoft-api
39 http 403 https://registry.npmjs.org/uoft-api
40 verbose headers { date: 'Sat, 10 Jan 2015 10:38:20 GMT',
40 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '6498',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-ord1734-ORD',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1420886300.538710,VS0,VE297',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: forbidden cannot modify pre-existing version: 0.1.7
42 error old={"name":"uoft-api","description":"A simple module for gathering data from the University of Toronto course listings.","author":{"name":"Thanasi Karachotzitis","email":"thanasi.karachotzitis@mail.utoronto.ca","url":"http://thanasi.me"},"version":"0.1.7","repository":{"type":"git","url":"https://karysto@bitbucket.org/karysto/uoft-api.git"},"dependencies":{"cheerio":"*","request":"*"},"license":"MIT","main":"index.js","gitHead":"91b67ed4909c4dee44eaa79109abcf9df9f3690f","_id":"uoft-api@0.1.7","scripts":{},"_shasum":"834a30a9cca02fe90db6a5a61e2a0b07f72538d0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"karysto","email":"thanasi.karachotzitis@mail.utoronto.ca"},"maintainers":[{"name":"karysto","email":"thanasi.karachotzitis@mail.utoronto.ca"}],"dist":{"shasum":"834a30a9cca02fe90db6a5a61e2a0b07f72538d0","tarball":"http://registry.npmjs.org/uoft-api/-/uoft-api-0.1.7.tgz"}}
42 error new={"name":"uoft-api","description":"A simple module for gathering data from the University of Toronto course listings.","author":{"name":"Thanasi Karachotzitis","email":"thanasi.karachotzitis@mail.utoronto.ca","url":"http://thanasi.me"},"version":"0.1.7","repository":{"type":"git","url":"https://karysto@bitbucket.org/karysto/uoft-api.git"},"dependencies":{"cheerio":"*","request":"*"},"license":"MIT","main":"index.js","readme":"A Node.js module for retrieving data from the University of Toronto's course listings.\u000a\u000a##### Disclaimer\u000aPlease be aware that this module relies on web scrapers to retrieve the data from the University of Toronto course listings. I cannot control how you incorporate this module into your project, and so by using this module you agree that the developer(s) of this module are in no way responsible for any consequences that may (or may not) result because of your use of this module.\u000a\u000a#### Getting Started\u000a##### Install:\u000a```sh\u000a$ npm i uoft-api\u000a```\u000a##### Reference:\u000a```js\u000avar uoftAPI = require('uoft-api');\u000a```\u000a\u000a### Supported Functions\u000a- `getCourseDepartment`\u000a- `getProgramCourses`\u000a\u000a##### `getCourseDepartment`\u000a- Takes a valid three-letter code representing a department at the University (ie/ the first three letters of any  course code).\u000a- Returns an array of JSON objects, where each object contains a department field which has the name of the department specified by the code.\u000a\u000a##### Number of Requests:\u000a- `getCourseDepartment` performs **1** request to retrieve the department name of the specified program.\u000a\u000a##### Usage:\u000a```js\u000auoftAPI.getCourseDepartment(programCode, function(err, department) {\u000a  // do whatever with the course department array\u000a});\u000a```\u000a##### Examples\u000a```js\u000auoftAPI.getCourseDepartment('csc', function(err, department) {\u000a  console.log(department);\u000a  /* [ { department: 'Computer Science' } ] */\u000a});\u000a```\u000a\u000a```js\u000auoftAPI.getCourseDepartment('env', function(err, department) {\u000a  console.log(department);\u000a  /* [ { department: 'Environment, School of' } ] */\u000a});\u000a```\u000a\u000a##### `getProgramCourses`\u000a- Takes a valid three-letter code representing a department at the University (ie/ the first three letters of any  course code).\u000a- Returns an array of JSON objects in a callback (as demonstrated below), where each JSON object contains a single course's information and has the following structure:\u000a\u000a```js\u000a  {\u000a    courseName: 'Computational Thinking', // Title of the course\u000a    courseCode: 'CSC104H1',               // Course code\u000a    courseTerm: 'F',                      // Course semester\u000a    courseWait: 'Y',                      // If the course contains a wait-list (Y/N)\u000a    courseProf: [ 'D. Heap' ]             // Professor(s) teaching the course\u000a  }\u000a```\u000a\u000a##### Number of Requests:\u000a- `getProgramCourses` performs **2** requests to retrieve all course data of the specified program.\u000a\u000a##### Usage:\u000a```js\u000auoftAPI.getProgramCourses(programCode, function(err, courseData) {\u000a  // do whatever with the returned courseData json\u000a});\u000a```\u000a##### Examples\u000a```js\u000auoftAPI.getProgramCourses('csc', function(err, courseData) {\u000a  console.log(courseData);\u000a  /*\u000a  [\u000a    {\u000a      courseName: 'Computational Thinking',\u000a      courseCode: 'CSC104H1',\u000a      courseTerm: 'F',\u000a      courseWait: 'Y',\u000a      courseProf: [ 'D. Heap' ]\u000a    },\u000a    {\u000a      courseName: 'Computational Thinking',\u000a      courseCode: 'CSC104H1',\u000a      courseTerm: 'S',\u000a      courseWait: 'Y',\u000a      courseProf: [ 'G. Baumgartner' ]\u000a    },\u000a      < ... etc, ordered by course code ... >\u000a    {\u000a      courseName: 'Computabil & Logic',\u000a      courseCode: 'CSC438H1',\u000a      courseTerm: 'F',\u000a      courseWait: 'Y',\u000a      courseProf: [ 'T. Pitassi' ]\u000a    }\u000a  ]\u000a*/\u000a});\u000a```\u000a\u000a### Function Addition Roadmap\u000a- Extending `getProgramCourses` to include the lecture and tutorial sections of each respective class in their own arrays.\u000a- Extending `getProgramCourses` to include when each tutorial and lecture section takes place (day of the week and time).\u000a- Extending the module to support course data from the University of Toronto Mississauga and Scarborough campus time-tables.\u000a- Extending the module to support course data from the St. George campus Faculty of Engineering.\u000a","readmeFilename":"README.md","gitHead":"91b67ed4909c4dee44eaa79109abcf9df9f3690f","_id":"uoft-api@0.1.7","scripts":{},"_shasum":"834a30a9cca02fe90db6a5a61e2a0b07f72538d0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"karysto","email":"thanasi.karachotzitis@mail.utoronto.ca"},"maintainers":[{"name":"karysto","email":"thanasi.karachotzitis@mail.utoronto.ca"}],"dist":{"shasum":"834a30a9cca02fe90db6a5a61e2a0b07f72538d0","tarball":"http://registry.npmjs.org/uoft-api/-/uoft-api-0.1.7.tgz"}}: uoft-api
42 error     at RegClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
42 error     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
42 error     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:943:16
42 error     at process._tickCallback (node.js:419:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Linux 3.2.0-74-generic-pae
45 error command "/usr/bin/node" "/usr/bin/npm" "publish" "."
46 error cwd /home/karysto/uoft-api
47 error node -v v0.10.33
48 error npm -v 1.4.28
49 verbose exit [ 1, true ]
